{
  "openapi": "3.0.3",
  "info": {
    "title": "WordPress MCP Server API",
    "description": "Model Context Protocol server for WordPress management",
    "version": "1.2.0",
    "contact": {
      "name": "MCP WordPress",
      "url": "https://github.com/docdyhr/mcp-wordpress"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/tools/wp_approve_comment": {
      "post": {
        "summary": "Approves a pending comment.",
        "description": "Execute wp_approve_comment MCP tool",
        "tags": [
          "comment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the comment to approve."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_cache_clear": {
      "post": {
        "summary": "Clear cache for a WordPress site.",
        "description": "Execute wp_cache_clear MCP tool",
        "tags": [
          "cache"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Site ID to clear cache for."
                  },
                  "pattern": {
                    "type": "string",
                    "description": "Optional pattern to clear specific cache entries (e.g., \"posts\", \"categories\")."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_cache_info": {
      "post": {
        "summary": "Get detailed cache configuration and status information.",
        "description": "Execute wp_cache_info MCP tool",
        "tags": [
          "cache"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Site ID to get cache info for."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_cache_stats": {
      "post": {
        "summary": "Get cache statistics for a WordPress site.",
        "description": "Execute wp_cache_stats MCP tool",
        "tags": [
          "cache"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Site ID to get cache stats for. If not provided, uses default site or fails if multiple sites configured."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_cache_warm": {
      "post": {
        "summary": "Pre-warm cache with essential WordPress data.",
        "description": "Execute wp_cache_warm MCP tool",
        "tags": [
          "cache"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Site ID to warm cache for."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_create_application_password": {
      "post": {
        "summary": "Creates a new application password for a user.",
        "description": "Execute wp_create_application_password MCP tool",
        "tags": [
          "site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "number",
                    "description": "The ID of the user to create the password for."
                  },
                  "app_name": {
                    "type": "string",
                    "description": "The name of the application this password is for."
                  }
                },
                "required": [
                  "user_id",
                  "app_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_create_category": {
      "post": {
        "summary": "Creates a new category.",
        "description": "Execute wp_create_category MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the category."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description for the category."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_create_comment": {
      "post": {
        "summary": "Creates a new comment on a post.",
        "description": "Execute wp_create_comment MCP tool",
        "tags": [
          "comment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "post": {
                    "type": "number",
                    "description": "The ID of the post to comment on."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the comment."
                  },
                  "author_name": {
                    "type": "string",
                    "description": "The name of the comment author."
                  },
                  "author_email": {
                    "type": "string",
                    "description": "The email of the comment author."
                  }
                },
                "required": [
                  "post",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_create_page": {
      "post": {
        "summary": "Creates a new page.",
        "description": "Execute wp_create_page MCP tool",
        "tags": [
          "page"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title for the page."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content for the page, in HTML format."
                  },
                  "status": {
                    "type": "string",
                    "description": "The publishing status for the page.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_create_post": {
      "post": {
        "summary": "Creates a new WordPress post with comprehensive validation and detailed success feedback including management links.\n\n**Usage Examples:**\n• Simple post: `wp_create_post --title=\"My New Post\" --content=\"<p>Hello World!</p>\"`\n• Draft post: `wp_create_post --title=\"Draft Post\" --status=\"draft\"`\n• Categorized post: `wp_create_post --title=\"Tech News\" --categories=[1,5] --tags=[10,20]`\n• Post with featured image: `wp_create_post --title=\"My Post\" --content=\"<p>Content</p>\" --featured_media=42`\n• Remove featured image: `wp_create_post --title=\"My Post\" --featured_media=0`\n• Scheduled post: `wp_create_post --title=\"Future Post\" --status=\"future\" --date=\"2024-12-25T10:00:00\"`\n• Complete post: `wp_create_post --title=\"Complete Post\" --content=\"<p>Content</p>\" --excerpt=\"Summary\" --status=\"publish\"`",
        "description": "Execute wp_create_post MCP tool",
        "tags": [
          "post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title for the post."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content for the post, in HTML format."
                  },
                  "status": {
                    "type": "string",
                    "description": "The publishing status for the post.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  },
                  "excerpt": {
                    "type": "string",
                    "description": "The excerpt for the post."
                  },
                  "categories": {
                    "type": "array",
                    "description": "An array of category IDs to assign to the post."
                  },
                  "tags": {
                    "type": "array",
                    "description": "An array of tag IDs to assign to the post."
                  },
                  "featured_media": {
                    "type": "number",
                    "description": "The ID of the featured media (image) for the post. Use wp_upload_media first to get a media ID. Set to 0 or null to remove the featured image."
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_create_tag": {
      "post": {
        "summary": "Creates a new tag.",
        "description": "Execute wp_create_tag MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the tag."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_create_user": {
      "post": {
        "summary": "Creates a new user.",
        "description": "Execute wp_create_user MCP tool",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username for the new user."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address for the new user."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the new user."
                  },
                  "roles": {
                    "type": "array",
                    "description": "An array of roles to assign to the user."
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_application_password": {
      "post": {
        "summary": "Revokes an existing application password.",
        "description": "Execute wp_delete_application_password MCP tool",
        "tags": [
          "site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "number",
                    "description": "The ID of the user who owns the password."
                  },
                  "uuid": {
                    "type": "string",
                    "description": "The UUID of the application password to revoke."
                  }
                },
                "required": [
                  "user_id",
                  "uuid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_category": {
      "post": {
        "summary": "Deletes a category.",
        "description": "Execute wp_delete_category MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the category to delete."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_comment": {
      "post": {
        "summary": "Deletes a comment.",
        "description": "Execute wp_delete_comment MCP tool",
        "tags": [
          "comment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the comment to delete."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "If true, the comment will be permanently deleted. Defaults to false (moved to trash)."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_media": {
      "post": {
        "summary": "Deletes a media item.",
        "description": "Execute wp_delete_media MCP tool",
        "tags": [
          "media"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the media item to delete."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "If true, permanently delete. If false, move to trash. Defaults to false."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_page": {
      "post": {
        "summary": "Deletes a page.",
        "description": "Execute wp_delete_page MCP tool",
        "tags": [
          "page"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the page to delete."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "If true, permanently delete. If false, move to trash. Defaults to false."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_post": {
      "post": {
        "summary": "Deletes a WordPress post with option for permanent deletion or moving to trash.",
        "description": "Execute wp_delete_post MCP tool",
        "tags": [
          "post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the post to delete."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "If true, permanently delete. If false, move to trash. Defaults to false."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_tag": {
      "post": {
        "summary": "Deletes a tag.",
        "description": "Execute wp_delete_tag MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the tag to delete."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_delete_user": {
      "post": {
        "summary": "Deletes a user.",
        "description": "Execute wp_delete_user MCP tool",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the user to delete."
                  },
                  "reassign": {
                    "type": "number",
                    "description": "The ID of a user to reassign the deleted user's content to."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_application_passwords": {
      "post": {
        "summary": "Lists application passwords for a specific user.",
        "description": "Execute wp_get_application_passwords MCP tool",
        "tags": [
          "site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "number",
                    "description": "The ID of the user to get application passwords for."
                  }
                },
                "required": [
                  "user_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_auth_status": {
      "post": {
        "summary": "Gets the current authentication status for a configured WordPress site.",
        "description": "Execute wp_get_auth_status MCP tool",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_category": {
      "post": {
        "summary": "Retrieves a single category by its ID.",
        "description": "Execute wp_get_category MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The unique identifier for the category."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_comment": {
      "post": {
        "summary": "Retrieves a single comment by its ID.",
        "description": "Execute wp_get_comment MCP tool",
        "tags": [
          "comment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The unique identifier for the comment."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_current_user": {
      "post": {
        "summary": "Retrieves the currently authenticated user with comprehensive profile information including roles, capabilities, and account details.\n\n**Usage Examples:**\n• Get current user: `wp_get_current_user`\n• Check permissions: Use this to verify your current user's capabilities and roles\n• Account verification: Confirm you're authenticated with the correct account\n• Profile details: View registration date, email, and user metadata",
        "description": "Execute wp_get_current_user MCP tool",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_media": {
      "post": {
        "summary": "Retrieves a single media item by its ID.",
        "description": "Execute wp_get_media MCP tool",
        "tags": [
          "media"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The unique identifier for the media item."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_page": {
      "post": {
        "summary": "Retrieves a single page by its ID.",
        "description": "Execute wp_get_page MCP tool",
        "tags": [
          "page"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The unique identifier for the page."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_page_revisions": {
      "post": {
        "summary": "Retrieves revisions for a specific page.",
        "description": "Execute wp_get_page_revisions MCP tool",
        "tags": [
          "page"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the page to get revisions for."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_post": {
      "post": {
        "summary": "Retrieves detailed information about a single post including metadata, content statistics, and management links.",
        "description": "Execute wp_get_post MCP tool",
        "tags": [
          "post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The unique identifier for the post."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_post_revisions": {
      "post": {
        "summary": "Retrieves the revision history for a specific post showing author and modification dates.",
        "description": "Execute wp_get_post_revisions MCP tool",
        "tags": [
          "post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the post to get revisions for."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_site_settings": {
      "post": {
        "summary": "Retrieves the general settings for a WordPress site.",
        "description": "Execute wp_get_site_settings MCP tool",
        "tags": [
          "site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_tag": {
      "post": {
        "summary": "Retrieves a single tag by its ID.",
        "description": "Execute wp_get_tag MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The unique identifier for the tag."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_get_user": {
      "post": {
        "summary": "Retrieves a single user by their ID.",
        "description": "Execute wp_get_user MCP tool",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The unique identifier for the user."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_list_categories": {
      "post": {
        "summary": "Lists categories from a WordPress site.",
        "description": "Execute wp_list_categories MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "string",
                    "description": "Limit results to those matching a search term."
                  },
                  "hide_empty": {
                    "type": "boolean",
                    "description": "Whether to hide categories with no posts."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_list_comments": {
      "post": {
        "summary": "Lists comments from a WordPress site, with filters.",
        "description": "Execute wp_list_comments MCP tool",
        "tags": [
          "comment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "post": {
                    "type": "number",
                    "description": "Limit results to comments assigned to a specific post ID."
                  },
                  "status": {
                    "type": "string",
                    "description": "Filter by comment status.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_list_media": {
      "post": {
        "summary": "Lists media items from a WordPress site, with filters.",
        "description": "Execute wp_list_media MCP tool",
        "tags": [
          "media"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "number",
                    "description": "Number of items to return per page (max 100).",
                    "default": 10
                  },
                  "search": {
                    "type": "string",
                    "description": "Limit results to those matching a search term."
                  },
                  "media_type": {
                    "type": "string",
                    "description": "Limit results to a specific media type."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_list_pages": {
      "post": {
        "summary": "Lists pages from a WordPress site, with filters.",
        "description": "Execute wp_list_pages MCP tool",
        "tags": [
          "page"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "number",
                    "description": "Number of items to return per page (max 100).",
                    "default": 10
                  },
                  "search": {
                    "type": "string",
                    "description": "Limit results to those matching a search term."
                  },
                  "status": {
                    "type": "string",
                    "description": "Filter by page status.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_list_posts": {
      "post": {
        "summary": "Lists posts from a WordPress site with comprehensive filtering options. Supports search, status filtering, and category/tag filtering with enhanced metadata display.\n\n**Usage Examples:**\n• Basic listing: `wp_list_posts`\n• Search posts: `wp_list_posts --search=\"AI trends\"`\n• Filter by status: `wp_list_posts --status=\"draft\"`\n• Category filtering: `wp_list_posts --categories=[1,2,3]`\n• Paginated results: `wp_list_posts --per_page=20 --page=2`\n• Combined filters: `wp_list_posts --search=\"WordPress\" --status=\"publish\" --per_page=10`",
        "description": "Execute wp_list_posts MCP tool",
        "tags": [
          "post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "per_page": {
                    "type": "number",
                    "description": "Number of items to return per page (max 100).",
                    "default": 10
                  },
                  "search": {
                    "type": "string",
                    "description": "Limit results to those matching a search term."
                  },
                  "status": {
                    "type": "string",
                    "description": "Filter by post status.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Limit results to posts in specific category IDs."
                  },
                  "tags": {
                    "type": "array",
                    "description": "Limit results to posts with specific tag IDs."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_list_tags": {
      "post": {
        "summary": "Lists tags from a WordPress site.",
        "description": "Execute wp_list_tags MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "string",
                    "description": "Limit results to those matching a search term."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_list_users": {
      "post": {
        "summary": "Lists users from a WordPress site with comprehensive filtering and detailed user information including roles, registration dates, and activity status.\n\n**Usage Examples:**\n• List all users: `wp_list_users`\n• Search users: `wp_list_users --search=\"john\"`\n• Filter by role: `wp_list_users --roles=[\"editor\",\"author\"]`\n• Find admins: `wp_list_users --roles=[\"administrator\"]`\n• Combined search: `wp_list_users --search=\"smith\" --roles=[\"subscriber\"]`",
        "description": "Execute wp_list_users MCP tool",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "string",
                    "description": "Limit results to those matching a search term."
                  },
                  "roles": {
                    "type": "array",
                    "description": "Limit results to users with specific roles."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_performance_alerts": {
      "post": {
        "summary": "Get performance alerts and anomaly detection results",
        "description": "Execute wp_performance_alerts MCP tool",
        "tags": [
          "performance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Specific site ID for multi-site setups (optional for single site)"
                  },
                  "severity": {
                    "type": "string",
                    "description": "Filter alerts by severity level (info, warning, error, critical)"
                  },
                  "category": {
                    "type": "string",
                    "description": "Filter alerts by category (performance, cache, system, wordpress)",
                    "enum": [
                      "overview",
                      "requests",
                      "cache",
                      "system",
                      "tools",
                      "all"
                    ],
                    "default": "all"
                  },
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of alerts to return (default: 20)"
                  },
                  "includeAnomalies": {
                    "type": "boolean",
                    "description": "Include detected anomalies (default: true)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_performance_benchmark": {
      "post": {
        "summary": "Compare current performance against industry benchmarks",
        "description": "Execute wp_performance_benchmark MCP tool",
        "tags": [
          "performance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Specific site ID for multi-site setups (optional for single site)"
                  },
                  "category": {
                    "type": "string",
                    "description": "Benchmark category (response_time, cache_performance, error_rate, system_resources, all)",
                    "enum": [
                      "overview",
                      "requests",
                      "cache",
                      "system",
                      "tools",
                      "all"
                    ],
                    "default": "all"
                  },
                  "includeRecommendations": {
                    "type": "boolean",
                    "description": "Include improvement recommendations (default: true)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_performance_export": {
      "post": {
        "summary": "Export comprehensive performance report",
        "description": "Execute wp_performance_export MCP tool",
        "tags": [
          "performance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Specific site ID for multi-site setups (optional for single site)"
                  },
                  "format": {
                    "type": "string",
                    "description": "Export format (json, csv, summary)",
                    "enum": [
                      "summary",
                      "detailed",
                      "raw"
                    ],
                    "default": "summary"
                  },
                  "includeHistorical": {
                    "type": "boolean",
                    "description": "Include historical data (default: true)"
                  },
                  "includeAnalytics": {
                    "type": "boolean",
                    "description": "Include analytics and insights (default: true)"
                  },
                  "timeRange": {
                    "type": "string",
                    "description": "Time range for data export (1h, 6h, 24h, 7d, 30d)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_performance_history": {
      "post": {
        "summary": "Get historical performance data and trends",
        "description": "Execute wp_performance_history MCP tool",
        "tags": [
          "performance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Specific site ID for multi-site setups (optional for single site)"
                  },
                  "timeframe": {
                    "type": "string",
                    "description": "Time period for historical data (1h, 6h, 12h, 24h, 7d)",
                    "enum": [
                      "1h",
                      "6h",
                      "12h",
                      "24h",
                      "7d",
                      "30d"
                    ]
                  },
                  "metrics": {
                    "type": "array",
                    "description": "Specific metrics to include (responseTime, cacheHitRate, errorRate, memoryUsage, requestVolume)"
                  },
                  "includeTrends": {
                    "type": "boolean",
                    "description": "Include trend analysis (default: true)",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_performance_optimize": {
      "post": {
        "summary": "Get optimization recommendations and insights",
        "description": "Execute wp_performance_optimize MCP tool",
        "tags": [
          "performance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Specific site ID for multi-site setups (optional for single site)"
                  },
                  "focus": {
                    "type": "string",
                    "description": "Optimization focus area (speed, reliability, efficiency, scaling)",
                    "enum": [
                      "speed",
                      "reliability",
                      "efficiency",
                      "scaling"
                    ]
                  },
                  "priority": {
                    "type": "string",
                    "description": "Implementation timeline (quick_wins, medium_term, long_term, all)",
                    "enum": [
                      "quick_wins",
                      "medium_term",
                      "long_term",
                      "all"
                    ]
                  },
                  "includeROI": {
                    "type": "boolean",
                    "description": "Include ROI estimates (default: true)"
                  },
                  "includePredictions": {
                    "type": "boolean",
                    "description": "Include performance predictions (default: true)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_performance_stats": {
      "post": {
        "summary": "Get real-time performance statistics and metrics",
        "description": "Execute wp_performance_stats MCP tool",
        "tags": [
          "performance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "type": "string",
                    "description": "Specific site ID for multi-site setups (optional for single site)"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of metrics to return (overview, requests, cache, system, tools, all)",
                    "enum": [
                      "overview",
                      "requests",
                      "cache",
                      "system",
                      "tools",
                      "all"
                    ],
                    "default": "all"
                  },
                  "format": {
                    "type": "string",
                    "description": "Detail level of the response (summary, detailed, raw)",
                    "enum": [
                      "summary",
                      "detailed",
                      "raw"
                    ],
                    "default": "summary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_search_site": {
      "post": {
        "summary": "Performs a site-wide search for content across posts, pages, and media with comprehensive results and metadata.\n\n**Usage Examples:**\n• Search everything: `wp_search_site --term=\"WordPress\"`\n• Search posts only: `wp_search_site --term=\"tutorial\" --type=\"posts\"`\n• Search pages: `wp_search_site --term=\"about\" --type=\"pages\"`\n• Search media: `wp_search_site --term=\"logo\" --type=\"media\"`\n• Find specific content: `wp_search_site --term=\"contact form\"`",
        "description": "Execute wp_search_site MCP tool",
        "tags": [
          "site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "term": {
                    "type": "string",
                    "description": "The search term to look for."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of content to search."
                  }
                },
                "required": [
                  "term"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_spam_comment": {
      "post": {
        "summary": "Marks a comment as spam.",
        "description": "Execute wp_spam_comment MCP tool",
        "tags": [
          "comment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the comment to mark as spam."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_switch_auth_method": {
      "post": {
        "summary": "Switches the authentication method for a site for the current session.",
        "description": "Execute wp_switch_auth_method MCP tool",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "description": "The new authentication method to use."
                  },
                  "username": {
                    "type": "string",
                    "description": "The username for 'app-password' or 'basic' authentication."
                  },
                  "password": {
                    "type": "string",
                    "description": "The Application Password for 'app-password' or password for 'basic' auth."
                  },
                  "jwt_token": {
                    "type": "string",
                    "description": "The token for 'jwt' authentication."
                  }
                },
                "required": [
                  "method"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_test_auth": {
      "post": {
        "summary": "Tests the authentication and connectivity for a configured WordPress site with detailed connection diagnostics.\n\n**Usage Examples:**\n• Test connection: `wp_test_auth`\n• Multi-site test: `wp_test_auth --site=\"my-site\"`\n• Verify setup: Use this after configuring new credentials\n• Troubleshoot: Run when experiencing connection issues\n• Health check: Regular verification of WordPress connectivity",
        "description": "Execute wp_test_auth MCP tool",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_category": {
      "post": {
        "summary": "Updates an existing category.",
        "description": "Execute wp_update_category MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the category to update."
                  },
                  "name": {
                    "type": "string",
                    "description": "The new name for the category."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_comment": {
      "post": {
        "summary": "Updates an existing comment.",
        "description": "Execute wp_update_comment MCP tool",
        "tags": [
          "comment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the comment to update."
                  },
                  "content": {
                    "type": "string",
                    "description": "The updated content for the comment."
                  },
                  "status": {
                    "type": "string",
                    "description": "The new status for the comment.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_media": {
      "post": {
        "summary": "Updates the metadata of an existing media item.",
        "description": "Execute wp_update_media MCP tool",
        "tags": [
          "media"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the media item to update."
                  },
                  "title": {
                    "type": "string",
                    "description": "The new title for the media item."
                  },
                  "alt_text": {
                    "type": "string",
                    "description": "The new alternative text."
                  },
                  "caption": {
                    "type": "string",
                    "description": "The new caption."
                  },
                  "description": {
                    "type": "string",
                    "description": "The new description."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_page": {
      "post": {
        "summary": "Updates an existing page.",
        "description": "Execute wp_update_page MCP tool",
        "tags": [
          "page"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the page to update."
                  },
                  "title": {
                    "type": "string",
                    "description": "The new title for the page."
                  },
                  "content": {
                    "type": "string",
                    "description": "The new content for the page, in HTML format."
                  },
                  "status": {
                    "type": "string",
                    "description": "The new status for the page.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_post": {
      "post": {
        "summary": "Updates an existing WordPress post with validation and detailed confirmation.",
        "description": "Execute wp_update_post MCP tool",
        "tags": [
          "post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the post to update."
                  },
                  "title": {
                    "type": "string",
                    "description": "The new title for the post."
                  },
                  "content": {
                    "type": "string",
                    "description": "The new content for the post, in HTML format."
                  },
                  "status": {
                    "type": "string",
                    "description": "The new status for the post.",
                    "enum": [
                      "publish",
                      "draft",
                      "private",
                      "pending",
                      "future"
                    ],
                    "default": "publish"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_site_settings": {
      "post": {
        "summary": "Updates one or more general settings for a WordPress site.",
        "description": "Execute wp_update_site_settings MCP tool",
        "tags": [
          "site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the site."
                  },
                  "description": {
                    "type": "string",
                    "description": "The tagline or description of the site."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "A city in the same timezone, e.g., 'America/New_York'."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_tag": {
      "post": {
        "summary": "Updates an existing tag.",
        "description": "Execute wp_update_tag MCP tool",
        "tags": [
          "taxonomy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the tag to update."
                  },
                  "name": {
                    "type": "string",
                    "description": "The new name for the tag."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_update_user": {
      "post": {
        "summary": "Updates an existing user.",
        "description": "Execute wp_update_user MCP tool",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "The ID of the user to update."
                  },
                  "email": {
                    "type": "string",
                    "description": "The new email address for the user."
                  },
                  "name": {
                    "type": "string",
                    "description": "The new display name for the user."
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tools/wp_upload_media": {
      "post": {
        "summary": "Uploads a file to the WordPress media library.",
        "description": "Execute wp_upload_media MCP tool",
        "tags": [
          "media"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_path": {
                    "type": "string",
                    "description": "The local, absolute path to the file to upload."
                  },
                  "title": {
                    "type": "string",
                    "description": "The title for the media item."
                  },
                  "alt_text": {
                    "type": "string",
                    "description": "Alternative text for the media item (for accessibility)."
                  },
                  "caption": {
                    "type": "string",
                    "description": "The caption for the media item."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description for the media item."
                  },
                  "post": {
                    "type": "number",
                    "description": "The ID of a post to attach this media to."
                  }
                },
                "required": [
                  "file_path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WordPressPost": {
        "type": "object",
        "description": "WordPress blog post object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "content": {
            "type": "string",
            "description": "Post content"
          },
          "status": {
            "type": "string",
            "description": "Publication status"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "status"
        ]
      }
    },
    "parameters": {},
    "responses": {}
  }
}