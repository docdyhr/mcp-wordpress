name: 🔄 Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:
    inputs:
      update_type:
        description: "Type of update to perform"
        required: true
        default: "minor"
        type: choice
        options:
          - patch
          - minor
          - major

env:
  NODE_VERSION: "20"

jobs:
  # 🔍 Security Updates (High Priority)
  security-updates:
    name: 🔒 Security Updates
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 🔒 Check for Security Vulnerabilities
        run: |
          npm audit --audit-level moderate
          npm audit fix --audit-level moderate --dry-run > security-fixes.txt
          cat security-fixes.txt

      - name: 🛠️ Apply Security Fixes
        run: |
          npm audit fix --audit-level moderate

      - name: 🧪 Test After Security Updates
        run: |
          npm ci
          npm run build
          npm run test

      - name: 📝 Create Security Update PR
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "security: automated security dependency updates"
          title: "🔒 Automated Security Dependency Updates"
          body: |
            ## 🔒 Security Updates Applied

            This PR contains automated security updates for vulnerable dependencies.

            ### 🛠️ Changes Made
            - Applied `npm audit fix` for moderate and high severity issues
            - All tests pass after updates
            - No breaking changes detected

            ### 🧪 Validation
            - ✅ Build successful
            - ✅ All tests passing
            - ✅ Security vulnerabilities resolved

            **Auto-generated by GitHub Actions**
          branch: automated/security-updates
          delete-branch: true

  # 📦 Dependency Updates
  dependency-updates:
    name: 📦 Dependency Updates
    runs-on: ubuntu-latest
    needs: security-updates
    strategy:
      matrix:
        update-type: [patch, minor]
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: 🔍 Check for ${{ matrix.update-type }} Updates
        run: |
          echo "Checking for ${{ matrix.update-type }} updates..."
          ncu --target ${{ matrix.update-type }} --jsonUpgraded > updates-${{ matrix.update-type }}.json
          cat updates-${{ matrix.update-type }}.json

      - name: 📦 Apply ${{ matrix.update-type }} Updates
        run: |
          ncu --target ${{ matrix.update-type }} -u
          npm install

      - name: 🧪 Test After ${{ matrix.update-type }} Updates
        run: |
          npm run build
          npm run test:typescript
          npm run lint

      - name: 📊 Generate Update Report
        run: |
          echo "## 📦 ${{ matrix.update-type }} Updates Applied" > update-report-${{ matrix.update-type }}.md
          echo "" >> update-report-${{ matrix.update-type }}.md
          echo "### Updated Dependencies:" >> update-report-${{ matrix.update-type }}.md
          cat updates-${{ matrix.update-type }}.json | jq -r 'to_entries[] | "- \(.key): \(.value)"' >> update-report-${{ matrix.update-type }}.md || echo "No updates found" >> update-report-${{ matrix.update-type }}.md

      - name: 📝 Create ${{ matrix.update-type }} Update PR
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "deps: automated ${{ matrix.update-type }} dependency updates"
          title: "📦 Automated ${{ matrix.update-type }} Dependency Updates"
          body-path: update-report-${{ matrix.update-type }}.md
          branch: automated/${{ matrix.update-type }}-updates
          delete-branch: true

  # 🔍 Compatibility Check
  compatibility-check:
    name: 🔍 Compatibility Check
    runs-on: ubuntu-latest
    needs: [security-updates, dependency-updates]
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔍 Check for Breaking Changes
        run: |
          # Run comprehensive tests to ensure no breaking changes
          npm run build
          npm run test
          npm run lint
          npm run typecheck

      - name: 📊 Generate Compatibility Report
        run: |
          echo "## 🔍 Compatibility Check Results" > compatibility-report.md
          echo "" >> compatibility-report.md
          echo "### Test Results:" >> compatibility-report.md
          echo "- ✅ Build: Successful" >> compatibility-report.md
          echo "- ✅ Tests: All Passing" >> compatibility-report.md
          echo "- ✅ Linting: No Issues" >> compatibility-report.md
          echo "- ✅ Type Check: No Errors" >> compatibility-report.md
          echo "" >> compatibility-report.md
          echo "All dependency updates are compatible with the current codebase." >> compatibility-report.md

      - name: 📤 Upload Compatibility Report
        uses: actions/upload-artifact@v4
        with:
          name: compatibility-report
          path: compatibility-report.md

  # 📋 Update Summary
  update-summary:
    name: 📋 Update Summary
    runs-on: ubuntu-latest
    needs: [security-updates, dependency-updates, compatibility-check]
    if: always()
    steps:
      - name: 📊 Generate Update Summary
        run: |
          echo "## 📋 Dependency Update Summary"
          echo ""
          echo "### Job Results:"
          echo "- 🔒 Security Updates: ${{ needs.security-updates.result }}"
          echo "- 📦 Dependency Updates: ${{ needs.dependency-updates.result }}"
          echo "- 🔍 Compatibility Check: ${{ needs.compatibility-check.result }}"
          echo ""
          echo "### Next Steps:"
          if [ "${{ needs.security-updates.result }}" == "success" ] || [ "${{ needs.dependency-updates.result }}" == "success" ]; then
            echo "- Review and merge automatically created PRs"
            echo "- Verify all tests pass in the PRs"
            echo "- Deploy updated dependencies to production"
          else
            echo "- Check failed jobs for issues"
            echo "- Manual intervention may be required"
          fi

  # 🚨 Alert on Failures
  alert-on-failure:
    name: 🚨 Alert on Failures
    runs-on: ubuntu-latest
    needs: [security-updates, dependency-updates, compatibility-check]
    if: failure()
    steps:
      - name: 🚨 Send Failure Alert
        run: |
          echo "🚨 Dependency Update Workflow Failed!"
          echo "Please check the failed jobs and take appropriate action."
          echo "Failed at: $(date)"

          # In a real environment, you could send notifications to Slack, email, etc.
          # Example: Send to Slack
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"🚨 Dependency update failed for mcp-wordpress"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}
