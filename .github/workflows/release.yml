name: 🚀 Release & Publish

on:
  push:
    branches: [main]
  release:
    types: [published]

env:
  NODE_VERSION: '20'

jobs:
  # 🏷️ Semantic Release
  semantic-release:
    name: 🏷️ Semantic Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Project
        run: npm run build

      - name: 🧪 Run Essential Tests
        run: |
          # Run core tests that must pass for release
          npm run test:typescript
          npm run test:config
          npm run test:security
        env:
          WORDPRESS_SITE_URL: https://example.com
          WORDPRESS_USERNAME: test_user
          WORDPRESS_APP_PASSWORD: test_password
          CI: true

      - name: 🏷️ Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # 📦 NPM Publish
  npm-publish:
    name: 📦 Fallback NPM Publish
    runs-on: ubuntu-latest
    needs: semantic-release
    if: failure() && (needs.semantic-release.outputs.new-release-published == 'true' || github.event_name == 'release')
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Project
        run: npm run build

      - name: 🧪 Verify Build
        run: |
          npm run typecheck
          npm run lint
          npm pack --dry-run

      - name: 🔍 Check Ignore Files
        run: npm run check:ignore

      - name: 📦 Publish to NPM
        run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # 🐳 Docker Publish
  docker-publish:
    name: 🐳 Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: semantic-release
    if: needs.semantic-release.outputs.new-release-published == 'true' || github.event_name == 'release'
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📝 Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/docdyhr/mcp-wordpress
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.version=${{ needs.semantic-release.outputs.new-release-version || github.ref_name }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created={{date 'YYYY-MM-DDTHH:mm:ssZ'}}

      - name: 🏗️ Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ needs.semantic-release.outputs.new-release-version || github.ref_name }}

      - name: 📝 Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        if: github.event_name == 'release' || needs.semantic-release.outputs.new-release-published == 'true' || github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: docdyhr/mcp-wordpress
          readme-filepath: ./README.md

  # 🎉 Post-Release Actions
  post-release:
    name: 🎉 Post-Release Actions
    runs-on: ubuntu-latest
    needs: [semantic-release, npm-publish, docker-publish]
    if: always() && (needs.semantic-release.outputs.new-release-published == 'true' || github.event_name == 'release')
    steps:
      - name: 📊 Release Summary
        run: |
          echo "🎉 Release completed successfully!"
          echo "📦 NPM Status: ${{ needs.npm-publish.result }}"
          echo "🐳 Docker Status: ${{ needs.docker-publish.result }}"
          echo "🏷️ Version: ${{ needs.semantic-release.outputs.new-release-version || github.ref_name }}"
          
      - name: 🚨 Notify on Failure
        if: failure()
        run: |
          echo "❌ Release failed!"
          echo "Please check the workflow logs and fix any issues."