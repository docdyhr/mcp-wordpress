name: 🔒 Security Badge Updates

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'tests/security/**'
      - 'src/**'
      - '.github/workflows/security-badges.yml'

jobs:
  update-security-badges:
    name: Update Security Badges
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      security-events: write
    
    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci
      
      - name: 🏗️ Build Project
        run: npm run build
      
      - name: 🔒 Run Security Tests
        run: npm run test:security
        continue-on-error: true
        id: security-tests
      
      - name: 🔍 Run Security Audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        id: security-audit
      
      - name: 🧪 Run Penetration Tests
        run: npm run test:security:validation
        continue-on-error: true
        id: penetration-tests
      
      - name: 📊 Count Security Test Results
        id: count-results
        run: |
          # Count security test results
          SECURITY_TESTS=$(npm run test:security --silent 2>&1 | grep -o "Tests:.*passed" | grep -o "[0-9]*" | head -1 || echo "0")
          SECURITY_TOTAL=$(npm run test:security --silent 2>&1 | grep -o "Tests:.*total" | grep -o "[0-9]*" | tail -1 || echo "0")
          
          # Count penetration test results  
          PENETRATION_TESTS=$(npm run test:security:validation --silent 2>&1 | grep -o "Tests:.*passed" | grep -o "[0-9]*" | head -1 || echo "0")
          PENETRATION_TOTAL=$(npm run test:security:validation --silent 2>&1 | grep -o "Tests:.*total" | grep -o "[0-9]*" | tail -1 || echo "0")
          
          # Check for vulnerabilities
          VULNERABILITIES=$(npm audit --audit-level=moderate --json 2>/dev/null | jq -r '.metadata.vulnerabilities.total // 0' || echo "0")
          
          # Set outputs
          echo "security_tests=${SECURITY_TESTS}" >> $GITHUB_OUTPUT
          echo "security_total=${SECURITY_TOTAL}" >> $GITHUB_OUTPUT
          echo "penetration_tests=${PENETRATION_TESTS}" >> $GITHUB_OUTPUT
          echo "penetration_total=${PENETRATION_TOTAL}" >> $GITHUB_OUTPUT
          echo "vulnerabilities=${VULNERABILITIES}" >> $GITHUB_OUTPUT
          
          # Calculate combined security score
          TOTAL_TESTS=$((SECURITY_TESTS + PENETRATION_TESTS))
          TOTAL_POSSIBLE=$((SECURITY_TOTAL + PENETRATION_TOTAL))
          
          echo "total_tests=${TOTAL_TESTS}" >> $GITHUB_OUTPUT
          echo "total_possible=${TOTAL_POSSIBLE}" >> $GITHUB_OUTPUT
          
          # Determine badge colors
          if [ "$VULNERABILITIES" -eq 0 ] && [ "$TOTAL_TESTS" -eq "$TOTAL_POSSIBLE" ]; then
            echo "security_color=brightgreen" >> $GITHUB_OUTPUT
            echo "vuln_color=brightgreen" >> $GITHUB_OUTPUT
            echo "pentest_color=brightgreen" >> $GITHUB_OUTPUT
          elif [ "$VULNERABILITIES" -eq 0 ] && [ "$TOTAL_TESTS" -ge $((TOTAL_POSSIBLE * 90 / 100)) ]; then
            echo "security_color=green" >> $GITHUB_OUTPUT
            echo "vuln_color=brightgreen" >> $GITHUB_OUTPUT
            echo "pentest_color=green" >> $GITHUB_OUTPUT
          elif [ "$VULNERABILITIES" -le 2 ]; then
            echo "security_color=yellow" >> $GITHUB_OUTPUT
            echo "vuln_color=yellow" >> $GITHUB_OUTPUT
            echo "pentest_color=yellow" >> $GITHUB_OUTPUT
          else
            echo "security_color=red" >> $GITHUB_OUTPUT
            echo "vuln_color=red" >> $GITHUB_OUTPUT
            echo "pentest_color=red" >> $GITHUB_OUTPUT
          fi
      
      - name: 📝 Update Security Badges in README
        run: |
          # Update security test badge
          sed -i "s|security%20tests-[0-9]*%2F[0-9]*%20passing-[a-z]*|security%20tests-${{ steps.count-results.outputs.security_tests }}%2F${{ steps.count-results.outputs.security_total }}%20passing-${{ steps.count-results.outputs.security_color }}|g" README.md
          
          # Update vulnerabilities badge
          sed -i "s|vulnerabilities-[0-9]*%20known-[a-z]*|vulnerabilities-${{ steps.count-results.outputs.vulnerabilities }}%20known-${{ steps.count-results.outputs.vuln_color }}|g" README.md
          
          # Update penetration testing badge
          sed -i "s|penetration%20testing-[0-9]*%2F[0-9]*%20passing-[a-z]*|penetration%20testing-${{ steps.count-results.outputs.penetration_tests }}%2F${{ steps.count-results.outputs.penetration_total }}%20passing-${{ steps.count-results.outputs.pentest_color }}|g" README.md
      
      - name: 🔍 Check for Changes
        id: check-changes
        run: |
          if git diff --quiet README.md; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: 📤 Commit Updated Badges
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "🔒 Update security badges - ${{ steps.count-results.outputs.total_tests }}/${{ steps.count-results.outputs.total_possible }} tests passing, ${{ steps.count-results.outputs.vulnerabilities }} vulnerabilities

          - Security Tests: ${{ steps.count-results.outputs.security_tests }}/${{ steps.count-results.outputs.security_total }} passing
          - Penetration Tests: ${{ steps.count-results.outputs.penetration_tests }}/${{ steps.count-results.outputs.penetration_total }} passing
          - Vulnerabilities: ${{ steps.count-results.outputs.vulnerabilities }} known
          
          🤖 Generated by security-badges workflow"
          git push
      
      - name: 📊 Create Security Report
        run: |
          cat > security-report.md << EOF
          # 🔒 Security Report
          
          **Generated:** $(date -u)
          **Status:** ${{ steps.security-tests.outcome == 'success' && steps.penetration-tests.outcome == 'success' && steps.count-results.outputs.vulnerabilities == '0' && '✅ SECURE' || '⚠️ NEEDS ATTENTION' }}
          
          ## 📊 Test Results
          
          | Test Type | Results | Status |
          |-----------|---------|--------|
          | Security Tests | ${{ steps.count-results.outputs.security_tests }}/${{ steps.count-results.outputs.security_total }} | ${{ steps.security-tests.outcome == 'success' && '✅ PASS' || '❌ FAIL' }} |
          | Penetration Tests | ${{ steps.count-results.outputs.penetration_tests }}/${{ steps.count-results.outputs.penetration_total }} | ${{ steps.penetration-tests.outcome == 'success' && '✅ PASS' || '❌ FAIL' }} |
          | Vulnerabilities | ${{ steps.count-results.outputs.vulnerabilities }} known | ${{ steps.count-results.outputs.vulnerabilities == '0' && '✅ CLEAN' || '⚠️ FOUND' }} |
          
          ## 🔍 Security Coverage
          
          - **XSS Protection:** ✅ Tested
          - **SQL Injection:** ✅ Tested  
          - **Path Traversal:** ✅ Tested
          - **Command Injection:** ✅ Tested
          - **Authentication Bypass:** ✅ Tested
          - **Rate Limiting:** ✅ Tested
          - **Input Validation:** ✅ Tested
          
          ## 📈 Recommendations
          
          ${{ steps.count-results.outputs.vulnerabilities == '0' && steps.security-tests.outcome == 'success' && '✅ Security posture is excellent. Continue regular testing.' || '⚠️ Review failed tests and address vulnerabilities.' }}
          EOF
          
          echo "📊 Security report generated"
      
      - name: 🚨 Notify on Security Issues
        if: steps.count-results.outputs.vulnerabilities != '0' || steps.security-tests.outcome != 'success'
        run: |
          echo "🚨 Security issues detected:"
          echo "- Vulnerabilities: ${{ steps.count-results.outputs.vulnerabilities }}"
          echo "- Security Tests: ${{ steps.security-tests.outcome }}"
          echo "- Penetration Tests: ${{ steps.penetration-tests.outcome }}"
          echo "Please review and address these issues."