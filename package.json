{
  "name": "mcp-wordpress",
  "version": "2.10.7",
  "description": "Comprehensive Model Context Protocol server for WordPress management with composition-based architecture, 59 tools, SEO toolkit, performance monitoring, intelligent caching, and production-ready authentication",
  "keywords": [
    "mcp",
    "model-context-protocol",
    "wordpress",
    "cms",
    "rest-api",
    "ai",
    "assistant"
  ],
  "homepage": "https://github.com/docdyhr/mcp-wordpress#readme",
  "bugs": {
    "url": "https://github.com/docdyhr/mcp-wordpress/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/docdyhr/mcp-wordpress.git"
  },
  "license": "MIT",
  "author": "Thomas Dyhr",
  "type": "module",
  "main": "dist/index.js",
  "bin": {
    "mcp-wordpress": "bin/mcp-wordpress.js",
    "wordpress-setup": "bin/setup.js",
    "wordpress-status": "bin/status.js"
  },
  "files": [
    "dist/",
    "src/",
    "bin/",
    "docs/",
    "examples/",
    "cache/",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "tsc && tsc-alias",
    "build:watch": "tsc --watch",
    "check:ci": "npm run typecheck && npm run lint && npm run test:coverage",
    "check:ignore": "node scripts/sync-ignore-files.js",
    "dev": "npm run build && DEBUG=true node dist/index.js",
    "docker:build": "docker build -t docdyhr/mcp-wordpress:latest .",
    "docker:publish": "./scripts/manual-docker-publish.sh",
    "docs:generate": "npm run build && node scripts/generate-docs.js",
    "docs:serve": "npm run docs:generate && node scripts/serve-docs.js",
    "docs:validate": "npm run docs:generate && node scripts/validate-docs.js",
    "docs:watch": "npm run docs:generate && echo 'Watching for changes...' && npm run docs:serve",
    "doctor:vscode": "npm run test:vscode && echo '\nðŸ©º VS Code health check complete'",
    "dxt:clean": "rm -rf dxt-build mcp-wordpress.dxt minimal-dxt-build mcp-wordpress-minimal.dxt mcp-wordpress-official.dxt",
    "dxt:package": "npm run dxt:clean && npm run dxt:build",
    "dxt:package:official": "npm run build && node scripts/build-dxt-clean.cjs",
    "eval": "npm run build && npx mcp-eval evaluations/config/wordpress-tools-eval.yaml dist/index.js",
    "eval:report": "node evaluations/scripts/generate-report.js",
    "fix:rest-auth": "bash scripts/fix-rest-api-auth.sh",
    "format": "prettier --write *.md docs/**/*.md src/**/*.ts tests/**/*.ts",
    "format:check": "prettier --check *.md docs/**/*.md src/**/*.ts tests/**/*.ts",
    "health": "node scripts/health-check.js",
    "lint": "eslint src/ tests/",
    "lint:fix": "eslint src/ tests/ --fix",
    "lint:md": "markdownlint *.md docs/**/*.md",
    "lint:md:fix": "markdownlint *.md docs/**/*.md --fix",
    "pre-commit": "lint-staged",
    "prepare": "husky",
    "prepublishOnly": "npm run build && npm run check:ignore",
    "release": "semantic-release",
    "release:dry": "semantic-release --dry-run",
    "security:audit": "npm audit --production",
    "security:fix": "npm audit fix",
    "security:full": "npm run security:scan && npm run security:review && npm run security:monitor && npm run test:security",
    "security:monitor": "npm audit --audit-level=moderate || echo 'Security monitoring completed'",
    "security:review": "npm run test:security || echo 'Security review completed'",
    "security:scan": "npm run build && node scripts/security-demo.js || npm audit --audit-level=low",
    "setup": "node bin/setup.js",
    "setup:vscode": "code --install-extension bradlc.vscode-tailwindcss && code --install-extension continue.continue && code --install-extension ms-python.python && code --install-extension ms-vscode.hexeditor",
    "start": "npm run build && node dist/index.js",
    "status": "node bin/status.js",
    "test": "npm run test:batch",
    "test:auth": "node scripts/test-auth.js",
    "test:batch": "npm run test:batch:1 && npm run test:batch:2 && npm run test:batch:3 && npm run test:batch:4",
    "test:batch:1": "npm run build && NODE_OPTIONS=\"--max-old-space-size=8192\" vitest run tests/security/ tests/cache/ tests/server/ --no-coverage --reporter=basic",
    "test:batch:2": "npm run build && NODE_OPTIONS=\"--max-old-space-size=8192\" vitest run tests/client/ tests/config/ tests/utils/ --no-coverage --reporter=basic",
    "test:batch:3": "npm run build && NODE_OPTIONS=\"--max-old-space-size=8192\" vitest run tests/tools/ tests/performance/ --no-coverage --reporter=basic",
    "test:batch:4": "npm run build && NODE_OPTIONS=\"--max-old-space-size=8192\" vitest run tests/*.test.js tests/docs/ --no-coverage --reporter=basic",
    "test:cache": "npm run build && vitest run tests/cache/",
    "test:ci": "npm run build && CI=true NODE_OPTIONS=\"--max-old-space-size=8192\" vitest run --reporter=basic",
    "test:ci:safe": "NODE_OPTIONS=\"--max-old-space-size=8192\" npx vitest run --config vitest.ci.config.ts",
    "test:compatibility": "npm run build && vitest run tests/compatibility/ || echo 'No compatibility tests found'",
    "test:config": "npm run build && vitest run tests/config/",
    "test:coverage": "npm run build && NODE_OPTIONS=\"--max-old-space-size=8192\" vitest run --coverage",
    "test:coverage:report": "npm run test:coverage && node scripts/coverage-guardrail.js",
    "test:memory-config": "npm run build && NODE_OPTIONS=\"--max-old-space-size=6144\" vitest run --config vitest.memory-safe.config.ts",
    "test:memory-safe": "npm run build && NODE_OPTIONS=\"--max-old-space-size=6144 --max-semi-space-size=256\" vitest run --no-coverage --reporter=basic",
    "test:performance": "npm run build && vitest run tests/performance/",
    "test:performance:ci": "npm run build && NODE_OPTIONS=\"--max-old-space-size=4096\" vitest run tests/performance/ --reporter=json --outputFile=performance-results.json",
    "test:safe": "node scripts/run-tests-safe.cjs",
    "test:security": "npm run build && vitest run tests/security/",
    "test:security:validation": "npm run build && vitest run tests/security/penetration-tests.test.js",
    "test:tools": "node scripts/test-all-tools-fixed.js",
    "test:typescript": "npm run build && npm run typecheck",
    "test:ui": "npm run build && vitest --ui",
    "test:vscode": "npm run build && node dist/scripts/test-vscode-setup.js",
    "test:watch": "vitest",
    "typecheck": "tsc --noEmit",
    "verify-claude": "node scripts/verify-claude-integration.js"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.md": [
      "markdownlint --fix"
    ],
    "package.json": [
      "sort-package-json"
    ]
  },
  "overrides": {
    "@pact-foundation/pact-node": {
      "@types/request": {
        "form-data": "^4.0.3"
      }
    }
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.4",
    "dotenv": "^17.2.1",
    "form-data": "^4.0.4",
    "zod": "^3.25.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.34.0",
    "@pact-foundation/pact": "^15.0.1",
    "@pact-foundation/pact-node": "^10.18.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@types/node": "^24.3.0",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "archiver": "^7.0.1",
    "conventional-changelog-conventionalcommits": "^9.1.0",
    "eslint": "^9.34.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-node": "^11.1.0",
    "fast-check": "^4.2.0",
    "fs-extra": "^11.3.1",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.5",
    "markdownlint-cli": "^0.45.0",
    "mcp-evals": "^2.0.1",
    "nock": "^14.0.10",
    "node-fetch": "^3.3.2",
    "open": "^10.2.0",
    "prettier": "^3.6.2",
    "semantic-release": "^24.2.7",
    "sort-package-json": "^3.4.0",
    "tsc-alias": "^1.8.16",
    "typescript": "^5.9.2",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=20.8.1"
  },
  "publishConfig": {
    "access": "public"
  }
}
