{
  "name": "mcp-wordpress",
  "version": "1.3.1",
  "description": "Comprehensive Model Context Protocol server for WordPress management with 59 tools, performance monitoring, intelligent caching, auto-generated documentation, Docker support, TypeScript, and production-ready authentication",
  "keywords": [
    "mcp",
    "model-context-protocol",
    "wordpress",
    "cms",
    "rest-api",
    "ai",
    "assistant"
  ],
  "homepage": "https://github.com/docdyhr/mcp-wordpress#readme",
  "bugs": {
    "url": "https://github.com/docdyhr/mcp-wordpress/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/docdyhr/mcp-wordpress.git"
  },
  "license": "MIT",
  "author": "Thomas Dyhr",
  "type": "module",
  "main": "dist/index.js",
  "bin": {
    "mcp-wordpress": "bin/mcp-wordpress.js",
    "wordpress-setup": "bin/setup.js",
    "wordpress-status": "bin/status.js"
  },
  "files": [
    "dist/",
    "src/",
    "bin/",
    "docs/",
    "examples/",
    "cache/",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "check:ignore": "node scripts/sync-ignore-files.js",
    "check:npm": "node scripts/test-npm-config.js",
    "dev": "npm run build && DEBUG=true node dist/index.js",
    "docs:check": "node scripts/validate-docs.js",
    "docs:generate": "npm run build && node scripts/generate-docs.js",
    "docs:serve": "npm run docs:generate && node scripts/serve-docs.js",
    "docs:validate": "npm run docs:generate && node scripts/validate-docs.js",
    "docs:watch": "npm run docs:generate && echo 'Watching for changes...' && npm run docs:serve",
    "dxt:build": "node scripts/build-dxt.js",
    "dxt:clean": "rm -rf dxt-build mcp-wordpress.dxt",
    "dxt:package": "npm run dxt:clean && npm run dxt:build",
    "dxt:validate": "echo 'âœ… DXT package validation - Basic validation performed during build'",
    "fix:rest-auth": "bash scripts/fix-rest-api-auth.sh",
    "format": "prettier --write *.md docs/**/*.md src/**/*.ts tests/**/*.ts",
    "format:check": "prettier --check *.md docs/**/*.md src/**/*.ts tests/**/*.ts",
    "health": "node scripts/health-check.js",
    "lint": "eslint src/ tests/",
    "lint:fix": "eslint src/ tests/ --fix",
    "lint:md": "markdownlint *.md docs/**/*.md",
    "lint:md:fix": "markdownlint *.md docs/**/*.md --fix",
    "pre-commit": "lint-staged",
    "prepare": "husky",
    "prepublishOnly": "npm run build && npm run check:ignore",
    "release": "semantic-release",
    "release:dry": "semantic-release --dry-run",
    "security:audit": "npm audit --production",
    "security:check": "node scripts/security-check.js",
    "security:fix": "npm audit fix",
    "security:full": "npm run security:scan && npm run test:security && npm run security:test",
    "security:scan": "npm audit --audit-level=low && npm run security:check",
    "security:test": "node scripts/security-test.js",
    "setup": "node bin/setup.js",
    "start": "npm run build && node dist/index.js",
    "status": "node bin/status.js",
    "test": "npm run test:typescript",
    "test:auth": "node scripts/test-auth.js",
    "test:cache": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/cache/ --config=jest.typescript.config.json",
    "test:ci": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest --config=jest.ci.config.json --runInBand",
    "test:config": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/config/ --config=jest.typescript.config.json",
    "test:contracts": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/contracts/ --passWithNoTests --config=jest.typescript.config.json",
    "test:contracts:live": "bash scripts/test-contracts-live.sh",
    "test:coverage": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest --coverage --collectCoverageFrom='dist/**/*.js' --coverageThreshold='{\"global\":{\"branches\":5,\"functions\":5,\"lines\":8,\"statements\":8}}' --config=jest.typescript.config.json",
    "test:fast": "npm run test:typescript",
    "test:integration": "node scripts/test-integration.js",
    "test:legacy": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest",
    "test:mcp": "node scripts/test-mcp.js",
    "test:multisite": "node scripts/test-multisite-quick.js",
    "test:performance": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/performance/ --config=jest.typescript.config.json",
    "test:property": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/property/ --config=jest.typescript.config.json",
    "test:security": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/security/ --config=jest.typescript.config.json",
    "test:security:penetration": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/security/penetration-tests.test.js --config=jest.typescript.config.json",
    "test:security:validation": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest tests/security/security-validation.test.js --config=jest.typescript.config.json",
    "test:tools": "node scripts/test-all-tools-fixed.js",
    "test:typescript": "npm run build && NODE_OPTIONS=\"--experimental-vm-modules\" jest --config=jest.typescript.config.json",
    "test:watch": "NODE_OPTIONS=\"--experimental-vm-modules\" jest --watch --config=jest.typescript.config.json",
    "test:with-env": "bash scripts/start-test-env.sh && npm run test:typescript",
    "typecheck": "tsc --noEmit",
    "verify-claude": "node scripts/verify-claude-integration.js"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.md": [
      "markdownlint --fix"
    ],
    "package.json": [
      "sort-package-json"
    ]
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.0.0",
    "dotenv": "^16.3.1",
    "form-data": "^4.0.0",
    "node-fetch": "^3.3.2",
    "zod": "^3.25.67"
  },
  "devDependencies": {
    "@eslint/js": "^9.29.0",
    "@jest/globals": "^30.0.0",
    "@pact-foundation/pact": "^15.0.1",
    "@pact-foundation/pact-node": "^10.18.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.19.1",
    "@typescript-eslint/parser": "^8.35.0",
    "archiver": "^7.0.1",
    "conventional-changelog-conventionalcommits": "^9.0.0",
    "eslint": "^9.29.0",
    "eslint-plugin-jest": "^29.0.1",
    "eslint-plugin-node": "^11.1.0",
    "fast-check": "^4.1.1",
    "husky": "^9.1.7",
    "jest": "^30.0.0",
    "lint-staged": "^16.1.2",
    "markdownlint-cli": "^0.45.0",
    "nock": "^14.0.5",
    "open": "^9.1.0",
    "prettier": "^3.6.2",
    "semantic-release": "^24.0.0",
    "sort-package-json": "^3.3.1",
    "typescript": "^5.8.3"
  },
  "engines": {
    "node": ">=20.8.1"
  },
  "publishConfig": {
    "access": "public"
  }
}
